name: CI/CD with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
        install: false
        use: true
      
    - name: Build PostgreSQL Docker image
      run: |
        cd ./postgres
        docker build -t postgres .
      env:
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_PORT: ${{ secrets.DB_PORT }}

    - name: Run PostgreSQL container
      run: |
        cd ./postgres
        docker run -d -p ${{ secrets.DB_PORT}}:5432 --name postgres postgres
      env:
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_PORT: ${{ secrets.DB_PORT }}

    
    - name: Wait for PostgreSQL to start
      run: dockerize -wait tcp://localhost:${{ secrets.DB_PORT }} -timeout 1m

    - name: Build Backend Docker image
      run: |
        cd ./backend
        docker build -t backend .
      env:
        DATABASE_URL: postgres://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@localhost:${{ secrets.DB_PORT }}/${{ secrets.DB_DATABASE }}

     - name: Run Backend container
      run: |
        cd ./backend
        docker run -d -p 4000:1909 --name my-backend my-backend
      env:
        DATABASE_URL: postgres://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@localhost:${{ secrets.DB_PORT }}/${{ secrets.DB_DATABASE }}

    - name: Prisma migration deploy
      run: |
        cd ./backend
        docker exec my-backend npx prisma migrate deploy
      env:
        DATABASE_URL: postgres://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@localhost:${{ secrets.DB_PORT }}/${{ secrets.DB_DATABASE }}

    - name: Start Backend server
      run: |
        cd ./backend
        docker exec my-backend npm run start
      env:
        DATABASE_URL: postgres://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@localhost:${{ secrets.DB_PORT }}/${{ secrets.DB_DATABASE }}


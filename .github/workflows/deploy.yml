name: CI/CD with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
        install: false
        use: true
      
    - name: Build PostgreSQL Docker image
      run: |
        cd ./postgres
        docker build -t postgres .
      env:
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_PORT: ${{ secrets.DB_PORT }}

    - name: Run PostgreSQL container
      run: |
        cd ./postgres
        docker run -d -p ${{ secrets.DB_PORT}}:5432 --name postgres postgres
      env:
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_PORT: ${{ secrets.DB_PORT }}

    - name: Wait for PostgreSQL to start
      run: |
        timeout=60
        while ! docker exec postgres pg_isready -U ${{ secrets.DB_USERNAME }} -d ${{ secrets.DB_DATABASE }} -h localhost -p ${{ secrets.DB_PORT }} > /dev/null; do
            timeout=$((timeout - 1))
            if [ $timeout -eq 0 ]; then
                echo "Timeout waiting for PostgreSQL to start"
                exit 1
            fi
            sleep 1
        done

    - name: Build Backend Docker image
      run: |
        cd ./backend
        docker build -t backend .
      env:
        DATABASE_URL: postgres://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@localhost:${{ secrets.DB_PORT }}/${{ secrets.DB_DATABASE }}
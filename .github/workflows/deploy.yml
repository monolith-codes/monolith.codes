name: CI/CD with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
        install: false
        use: true
      
    - name: Build PostgreSQL Docker image
      run: |
        cd ./postgres
        docker build -t postgres .
      env:
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_PORT: ${{ secrets.DB_PORT }}

    - name: Run PostgreSQL container
      id: run_container
      run: |
        cd ./postgres
        CONTAINER_ID=$(docker run -d -p ${{ secrets.DB_PORT}}:5432 --name postgres -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} -e POSTGRES_USER=${{ secrets.DB_USERNAME }} -e POSTGRES_DB=${{ secrets.DB_DATABASE }} postgres)
        echo "::set-output name=container_id::$CONTAINER_ID"

    # Your other steps here...

  stop:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Stop PostgreSQL container
      if: ${{ needs.build.result == 'success' }}
      run: |
        CONTAINER_ID="${{ needs.build.outputs.container_id }}"
        docker stop $CONTAINER_ID
